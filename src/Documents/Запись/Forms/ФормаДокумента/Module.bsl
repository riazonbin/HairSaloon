
&НаСервереБезКонтекста
Функция ПолучитьИнформациюОбУслуге(Услуга, Дата)

	ВозвращаемаяУслуга = Новый Структура();
	ВозвращаемаяУслуга.Вставить("Длительность", 0);
	ВозвращаемаяУслуга.Вставить("Цена", 0);

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Услуги.Длительность КАК Длительность,
		|	ЕСТЬNULL(ЦеныНаУслугиСрезПоследних.Цена, 0) КАК Цена
		|ИЗ
		|	Справочник.Услуги КАК Услуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНаУслуги.СрезПоследних(&Дата, Услуга = &Услуга) КАК ЦеныНаУслугиСрезПоследних
		|		ПО Услуги.Ссылка = ЦеныНаУслугиСрезПоследних.Услуга
		|ГДЕ
		|	Услуги.Ссылка = &Услуга";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Услуга", Услуга);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		
		ЗаполнитьЗначенияСвойств(ВозвращаемаяУслуга, ВыборкаДетальныеЗаписи);
		
		Возврат ВозвращаемаяУслуга;
	КонецЕсли;
			
КонецФункции // ПолучитьИнформациюОбУслугах()

&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	ТекСтрока = Элементы.Услуги.ТекущиеДанные;
	ИнформацияОбУслуге = ПолучитьИнформациюОбУслуге(ТекСтрока.Услуга, Объект.Дата);
	ТекСтрока.Стоимость = ИнформацияОбУслуге.Цена;
	ТекСтрока.Длительность = ИнформацияОбУслуге.Длительность;
КонецПроцедуры                               

&НаКлиенте
Процедура ПересчетДанныхДокумента()	
	Попытка
	
		Сумма = 0;
		Длительность = 0;
		
		Для каждого ЭлементУслуги Из Объект.Услуги Цикл
			 Сумма = Сумма + ЭлементУслуги.Стоимость;
			 Длительность = Длительность + ЭлементУслуги.Длительность;
		КонецЦикла;
		 
		Объект.Длительность = Длительность;
		Объект.Сумма = Сумма;
		
	Исключение
	
	КонецПопытки;	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьНеизменяемыеПоля();
КонецПроцедуры

Процедура УстановитьНеизменяемыеПоля()
	Элементы.Сумма.ТолькоПросмотр = Истина;
	//Элементы.Длительность.ТолькоПросмотр = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	ПересчетДанныхДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.ДатаОкончания = Объект.Дата + Объект.Длительность * 60;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Изменение_Запись"); 
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.Цвет = Новый ХранилищеЗначения(Цвет);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Цвет = ТекущийОбъект.Цвет.Получить();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьДиапазонВремени();
	
	Если Параметры.Ключ.Пустая() Тогда
		Цвет = WebЦвета.БледноЛиловый
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьДиапазонВремени();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДиапазонВремени()
	НомерДняНедели = ДеньНедели(Объект.Дата);
	
	ДниНедели = Новый Соответствие();
	ДниНедели.Вставить(1, Перечисления.ДниНедели.Понедельник);
	ДниНедели.Вставить(2, Перечисления.ДниНедели.Вторник);
	ДниНедели.Вставить(3, Перечисления.ДниНедели.Среда);
	ДниНедели.Вставить(4, Перечисления.ДниНедели.Четверг);
	ДниНедели.Вставить(5, Перечисления.ДниНедели.Пятница);
	ДниНедели.Вставить(6, Перечисления.ДниНедели.Суббота);
    ДниНедели.Вставить(7, Перечисления.ДниНедели.Воскресенье);
	
	ТекущийДеньНедели = ДниНедели.Получить(НомерДняНедели);

	Элементы.Время.СписокВыбора.Очистить();
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	ЗапросСалона = Новый Запрос;
	ЗапросСалона.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Салоны.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Салоны КАК Салоны";
	
	РезультатЗапроса = ЗапросСалона.Выполнить();
	
	РезультатСалон = РезультатЗапроса.Выбрать();
	
	РезультатСалон.Следующий();
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СалоныРежимРаботы.ДеньНедели КАК ДеньНедели,
		|	СалоныРежимРаботы.ВремяНачала КАК ВремяНачала,
		|	СалоныРежимРаботы.ВремяОкончания КАК ВремяОкончания
		|ИЗ
		|	Справочник.Салоны.РежимРаботы КАК СалоныРежимРаботы
		|ГДЕ
		|	СалоныРежимРаботы.Ссылка = &Салон
		|	И СалоныРежимРаботы.ДеньНедели = &ДеньНедели";
	
	Запрос.УстановитьПараметр("ДеньНедели", ТекущийДеньНедели);
	Запрос.УстановитьПараметр("Салон", РезультатСалон.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ВыборкаДетальныеЗаписи.Следующий();
		
		ИнтервалЗаписей = 1800;
		
		ТекущееВремя = ВыборкаДетальныеЗаписи.ВремяНачала;
		
		Пока ТекущееВремя < ВыборкаДетальныеЗаписи.ВремяОкончания Цикл

			ДатаВремя = НачалоДня(Объект.Дата) + (ТекущееВремя - '00010101');
			Элементы.Время.СписокВыбора.Добавить(ДатаВремя, Формат(ДатаВремя, "ДФ=ЧЧ:мм"));
			
			ТекущееВремя = ТекущееВремя + ИнтервалЗаписей;
		КонецЦикла; 
		

	КонецЕсли;
		
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры // ()



